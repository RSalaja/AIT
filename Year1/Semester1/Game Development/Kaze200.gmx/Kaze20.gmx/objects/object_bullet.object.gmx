<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//      ANIMATION       //
image_speed = 0.9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//      BULLET  DIRECTION       //
x += lengthdir_x(spd,direction); 
y += lengthdir_y(spd,direction); 

//      BULLET  COLLISISONS     //
//      WALL, CRATES, ETC.      //
if (place_meeting(x, y, object_wall)) &amp;&amp; (place_meeting(x, y, object_crate))
{
    spd = 0;
    with(instance_place(x, y, object_parenthitable))
    {
        hp--;
        flash = 3
    }
    instance_destroy();
    repeat(5)
    with(instance_create(x, y, object_brownSpark))
    {
        depth = -100;
    }
}

//      PLAYER      //
if (place_meeting(x, y, object_player))
{
    spd = 0;
    with(object_player)
    {
        pHealth--;
        flash = 3
        pHitFrom = other.direction;
        lastHitBy = 1
    }
    with(object_camera)
    {
        shake = 5;
    }
    instance_destroy();
    repeat(5)
    with(instance_create(x, y, object_blood))
    {
        depth = -100;
    }
}

//      JUST THE WALL       //
if (place_meeting(x, y, object_wall))
{
    spd = 0;
    instance_destroy();
    repeat(5)
    with(instance_create(x, y, object_brownSpark))
    {
        depth = -100;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
