<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI/VARS/MENU SETUP

gui_width = display_get_gui_width();
gui_height = display_get_gui_height();
gui_margin = 32 

menu_x = gui_width/2
menu_y = gui_height + 200
menu_y_target = gui_height - gui_margin - 32
menu_speed = 25
menu_font = MENU_FONT
menu_itemheight = font_get_size(MENU_FONT)
menu_commited = -1
menu_control = true

menu[4] = "NEW GAME"
menu[3] = "CONTINUE"
menu[2] = "CONTROLS"
menu[1] = "ABOUT"
menu[0] = "QUIT"

menu_items = array_length_1d(menu);
menu_cursor = 4

//  TITLE
title_x = gui_width/2 
title_y = gui_height/2 - 500
title_y_target = gui_height/2

title = "BO JACK"
off = 2

title_done = 0

hint = "USE ARROW KEYS TO CHOOSE
USE ENTER TO SELECT"


hint_x = gui_width + 200
hint_y = gui_height - 300
hint_x_target = gui_width/2
hint_speed = 25

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_getInput();
///     CONTROL MENU        ///

//      EASE IN TITLE       //
title_y += (title_y_target - title_y) / menu_speed

//      EASE IN MENU        //
menu_y += (menu_y_target - menu_y)/menu_speed

//      EASE IN title        //
hint_x += (hint_x_target - hint_x)/hint_speed


//      KEYBOARD CONTROL        //
if (menu_control)
{
    if (mouse_wheel_up() or keyboard_check_pressed(vk_up))
    {
        menu_cursor++;
        if(menu_cursor &gt;= menu_items)
        {
            menu_cursor = 0
        }
    }
    if (mouse_wheel_down() or keyboard_check_pressed(vk_down))
    {
        menu_cursor--;
        if(menu_cursor &lt; 0)
        {
            menu_cursor = menu_items - 1
        }
    }
    if (key_enter)
    {
        menu_y_target = gui_height + 200
        title_y_target = - 500
        hint_x_target = - 500
        menu_commited = menu_cursor
        menu_control = false;
    }
}
if (menu_y &gt; gui_height + 150 &amp;&amp; menu_commited != -1)
{
    switch (menu_cursor)
    {
        case 4 : 
        {
            SlideTrans(trans_mode.goto,Level_1_Tutorial);
        } break;
        
        case 2 :
        {
            SlideTrans(trans_mode.goto,HelpScreen);
        }break;
        
        case 0 : 
        {
            game_end();
        } break;
    }
}




    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(MENU_FONT);
draw_set_halign(fa_center);
draw_set_valign(fa_middle)
for (var i = 0; i &lt; menu_items; i++)
{
    var offset = 2
    var txt = menu[i];
    if (menu_cursor ==i)
    {
        txt = string_insert("&gt; ",txt,0)
        var col = c_white
    }
    else
    {
       var col = c_gray 
    }
    var xx = menu_x;
    var yy = menu_y - (menu_itemheight * (i * 1.5))
    
    draw_set_colour(c_black);
    draw_text(xx-offset,yy,txt)
    draw_text(xx+offset,yy,txt)
    draw_text(xx,yy-offset,txt)
    draw_text(xx,yy+offset,txt)
    draw_set_colour(col)
    draw_text(xx,yy,txt)
    
}

//      TITLE       //
draw_set_font(MENU_FONT_BIG);
MenuTexts(title_x, title_y, title  );



//      HINT        //

draw_set_font(MENU_FONT);
MenuTexts(hint_x, hint_y, hint );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
